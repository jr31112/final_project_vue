{"remainingRequest":"C:\\Users\\student\\Desktop\\fin_project\\final_project_vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\student\\Desktop\\fin_project\\final_project_vue\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\student\\Desktop\\fin_project\\final_project_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\student\\Desktop\\fin_project\\final_project_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\student\\Desktop\\fin_project\\final_project_vue\\src\\components\\MovieDetail.vue?vue&type=template&id=335fa521&","dependencies":[{"path":"C:\\Users\\student\\Desktop\\fin_project\\final_project_vue\\src\\components\\MovieDetail.vue","mtime":1574851500852},{"path":"C:\\Users\\student\\Desktop\\fin_project\\final_project_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1574819743271},{"path":"C:\\Users\\student\\Desktop\\fin_project\\final_project_vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1574819750517},{"path":"C:\\Users\\student\\Desktop\\fin_project\\final_project_vue\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\student\\Desktop\\fin_project\\final_project_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1574819743271},{"path":"C:\\Users\\student\\Desktop\\fin_project\\final_project_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1574819750516}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}