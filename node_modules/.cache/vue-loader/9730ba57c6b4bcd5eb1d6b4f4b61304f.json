{"remainingRequest":"C:\\Users\\student\\Desktop\\저장소\\final_project_vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\student\\Desktop\\저장소\\final_project_vue\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\student\\Desktop\\저장소\\final_project_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\student\\Desktop\\저장소\\final_project_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\student\\Desktop\\저장소\\final_project_vue\\src\\components\\PeopleDetail.vue?vue&type=template&id=0c6ef820&","dependencies":[{"path":"C:\\Users\\student\\Desktop\\저장소\\final_project_vue\\src\\components\\PeopleDetail.vue","mtime":1574929437913},{"path":"C:\\Users\\student\\Desktop\\저장소\\final_project_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1574895488657},{"path":"C:\\Users\\student\\Desktop\\저장소\\final_project_vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1574895496094},{"path":"C:\\Users\\student\\Desktop\\저장소\\final_project_vue\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574895496200},{"path":"C:\\Users\\student\\Desktop\\저장소\\final_project_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1574895488657},{"path":"C:\\Users\\student\\Desktop\\저장소\\final_project_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1574895496093}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}